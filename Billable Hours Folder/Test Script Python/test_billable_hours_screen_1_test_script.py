from selenium.webdriver.common.by import By
from src.testproject.classes import DriverStepSettings, StepSettings
from src.testproject.decorator import report_assertion_errors
from src.testproject.enums import SleepTimingType
from src.testproject.sdk.drivers import webdriver
from src.testproject.sdk.drivers.actions import Actions
import pytest


"""
This pytest test was automatically generated by TestProject
    Project: Mobile Automation Billable Hours
    Package: TestProject.Generated.Tests.MobileAutomationBillableHours
    Test: Billable Hours Screen 1 Test script
    Generated by: Rex Ogunka (rexmarvis11@gmail.com)
    Generated on 04/30/2021, 15:25:45
"""


@pytest.fixture()
def driver():
    capabilities = {
        "platformName": "Android",
        "udid": "RF8N61XNB3P",
    }
    driver = webdriver.Remote(token="PgTMlqBkyvCY86xSlo5kuI__IDxlsk04IKrktvYAMGM",
                              project_name="Mobile Automation Billable Hours",
                              job_name="Billable Hours Screen 1 Test script",
                              desired_capabilities=capabilities)
    step_settings = StepSettings(timeout=15000,
                                 sleep_time=500,
                                 sleep_timing_type=SleepTimingType.Before)
    with DriverStepSettings(driver, step_settings):
        yield driver
    driver.quit()


@report_assertion_errors
def test_main(driver):
    """Screen 1 Test script."""
    # Test Parameters
    Pname = "Billable Hours"

    # 1. Reset App
    # Clear application data and restart (Auto-generated)
    driver.reset()

    # 2. Pause for '2000'ms
    driver.pause(milliseconds=2000)

    # 3. Does 'Allowjhxfghgjkhhbnv ' contain 'Allow'?
    allowjhxfghgjkhhbnv_ = driver.find_element(By.XPATH,
                                               "//android.widget.FrameLayout[1]/android.widget.FrameLayout[1]/android.widget.FrameLayout[1]/android.widget.ScrollView[1]/android.widget.LinearLayout[1]/android.widget.LinearLayout[1]/android.widget.LinearLayout[2]/android.widget.Button[1]")
    step_output = allowjhxfghgjkhhbnv_.text
    assert step_output and ("Allow" in step_output)

    # 4. Click 'AllowPerm'
    allowperm = driver.find_element(By.XPATH,
                                    "//android.widget.Button[1][@package = 'com.google.android.permissioncontroller']")
    allowperm.click()

    # 5. Is 'Billable Hours' visible?
    billable_hours = driver.find_element(By.XPATH,
                                         "//android.view.View[@text = 'Billable Hours']")
    assert billable_hours.is_displayed()

    # 6. Does 'Billable Hours' contain 'Billable Hours'?
    billable_hours = driver.find_element(By.XPATH,
                                         "//android.view.View[@text = 'Billable Hours']")
    step_output = billable_hours.text
    assert step_output and ("Billable Hours" in step_output)

    # 7. Does 'Enter the file path below' contain 'Enter the file path below'?
    enter_the_file_path_below = driver.find_element(By.XPATH,
                                                    "//android.view.View[@text = 'Enter the file path below']")
    step_output = enter_the_file_path_below.text
    assert step_output and ("Enter the file path below" in step_output)

    # 8. Is 'ANDROID.WIDGET.EDITTEXT' is clickable?
    android_widget_edittext = driver.find_element(By.XPATH,
                                                  "//android.widget.EditText")
    assert android_widget_edittext.is_enabled()

    # 9. Click 'ANDROID.WIDGET.EDITTEXT'
    android_widget_edittext = driver.find_element(By.XPATH,
                                                  "//android.widget.EditText")
    android_widget_edittext.click()

    # 10. Type '/Internal storage/sample1.csv' in 'EDITTEXT2'
    edittext2 = driver.find_element(By.XPATH,
                                    "//android.widget.EditText[@class = 'android.widget.EditText']")
    edittext2.send_keys("/Internal storage/sample1.csv")

    # 11. Click 'Continue'
    step_settings = StepSettings(invert_result=True)
    with DriverStepSettings(driver, step_settings):
        _continue = driver.find_element(By.XPATH,
                                        "//android.view.View[@text = 'Continue']")
        _continue.click()
